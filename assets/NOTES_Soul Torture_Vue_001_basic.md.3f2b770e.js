import{_ as t,c as i,o as e,a}from"./app.3fc740ed.js";const v=JSON.parse('{"title":"Vue 基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"watch 和 computed 的区别?","slug":"watch-和-computed-的区别","link":"#watch-和-computed-的区别","children":[]},{"level":2,"title":"Vue 组件通讯有几种方式?","slug":"vue-组件通讯有几种方式","link":"#vue-组件通讯有几种方式","children":[]},{"level":2,"title":"Vuex mutation 与 action 的区别","slug":"vuex-mutation-与-action-的区别","link":"#vuex-mutation-与-action-的区别","children":[]},{"level":2,"title":"虚拟 DOM (VDOM) 真的很快嘛?","slug":"虚拟-dom-vdom-真的很快嘛","link":"#虚拟-dom-vdom-真的很快嘛","children":[]}],"relativePath":"_NOTES/Soul Torture/Vue/001_basic.md","lastUpdated":1675862808000}'),l={name:"_NOTES/Soul Torture/Vue/001_basic.md"},c=a('<h1 id="vue-基础" tabindex="-1">Vue 基础 <a class="header-anchor" href="#vue-基础" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#watch-和-computed-的区别">watch 和 computed 的区别?</a></li><li><a href="#vue-组件通讯有几种方式">Vue 组件通讯有几种方式?</a></li><li><a href="#vuex-mutation-与-action-的区别">Vuex mutation 与 action 的区别</a></li><li><a href="#虚拟-dom-vdom-真的很快嘛">虚拟 DOM (VDOM) 真的很快嘛?</a></li></ul></nav><h2 id="watch-和-computed-的区别" tabindex="-1">watch 和 computed 的区别? <a class="header-anchor" href="#watch-和-computed-的区别" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">吐槽</p><p>不能说一模一样, 只能说毫不相关。</p></div><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>computed 用于计算产出新的数据, 有缓存</li><li>watch 用于监听现有数据执行某些副作用</li></ul></div><h2 id="vue-组件通讯有几种方式" tabindex="-1">Vue 组件通讯有几种方式? <a class="header-anchor" href="#vue-组件通讯有几种方式" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>props 和 emit</li><li>自定义事件 (事件总线)</li><li>$attrs</li><li>$parent</li><li>$refs</li><li>provide / inject</li><li>Vuex</li></ul></div><h2 id="vuex-mutation-与-action-的区别" tabindex="-1">Vuex mutation 与 action 的区别 <a class="header-anchor" href="#vuex-mutation-与-action-的区别" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>mutaion : 原子操作, 必须同步代码</li><li>action : 可包含多个 mutation, 可包含异步代码</li></ul></div><h2 id="虚拟-dom-vdom-真的很快嘛" tabindex="-1">虚拟 DOM (VDOM) 真的很快嘛? <a class="header-anchor" href="#虚拟-dom-vdom-真的很快嘛" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">前情提要</p><p>VDOM : 用 JS 对象模拟的 DOM 节点数据</p></div><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>VDOM 并不快, JS 直接操作 DOM 才是最快的</li><li>但 &quot;数据驱动视图&quot; 要有合适的技术方案, 不能全部 DOM 重建</li><li>VDOM 就是目前最合适的技术方案(并不是因为它快, 而是合适)</li></ul></div>',12),o=[c];function u(s,d,n,r,h,m){return e(),i("div",null,o)}const _=t(l,[["render",u]]);export{v as __pageData,_ as default};
