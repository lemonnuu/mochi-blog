import{_ as e,c as t,e as n,w as l,b as p,d as s,a as o,r as c,o as r}from"./app.e96f5412.js";const v=JSON.parse('{"title":"JavaScript の循环与遍历","titleTemplate":false,"description":"","frontmatter":{"date":"2023-02-01 14:00:00","title":"JavaScript の循环与遍历","titleTemplate":false,"author":"Mochi","outline":[2,4],"categories":["post"],"tags":["javascript"]},"headers":[{"level":2,"title":"while 语句","slug":"while-语句","link":"#while-语句","children":[]},{"level":2,"title":"do...while","slug":"do-while","link":"#do-while","children":[]},{"level":2,"title":"for 语句","slug":"for-语句","link":"#for-语句","children":[]},{"level":2,"title":"for...in 语句","slug":"for-in-语句","link":"#for-in-语句","children":[]},{"level":2,"title":"for...of 语句","slug":"for-of-语句","link":"#for-of-语句","children":[]},{"level":2,"title":"for await...of 语句","slug":"for-await-of-语句","link":"#for-await-of-语句","children":[]},{"level":2,"title":"Array.prototype.forEach()","slug":"array-prototype-foreach","link":"#array-prototype-foreach","children":[]}],"relativePath":"_POSTS/javascript/004_traverse.md","lastUpdated":1675234285000}'),i={name:"_POSTS/javascript/004_traverse.md"},y=o("",23),D=o("",7),F=o("",18),C=p("code",null,"new Array(7) -> [empty × 7]",-1);function A(d,h,f,u,g,b){const a=c("f");return r(),t("div",null,[y,n(a,null,{default:l(()=>[s("for 循环头部的 let 不仅将 i 绑定到了 for 循环的块中, 事实上它将其重新绑定到了循环的每一个迭代中, 确保使用上一个循环迭代结束时的值重新进行赋值。")]),_:1}),D,n(a,null,{default:l(()=>[s("for...in 语句是为遍历对象属性而构建的, 它以任意顺序迭代一个对象的除 Symbol 以外的可枚举属性, 包括继承的可枚举属性。")]),_:1}),F,p("ul",null,[p("li",null,[n(a,null,{default:l(()=>[s("已删除或者未初始化的项将被跳过")]),_:1}),s(", 例如 "),C]),p("li",null,[n(a,null,{default:l(()=>[s("除了抛出异常以外, 没有办法中止或跳出 forEach() 循环")]),_:1})])])])}const m=e(i,[["render",A]]);export{v as __pageData,m as default};
