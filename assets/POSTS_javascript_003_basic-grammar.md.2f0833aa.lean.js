import{_ as e,c as t,e as n,w as p,d as a,b as s,a as o,r as c,o as i}from"./app.52f3574a.js";const G=JSON.parse('{"title":"JavaScript 基础语法","titleTemplate":false,"description":"","frontmatter":{"date":"2023-02-01 13:10:20","title":"JavaScript 基础语法","titleTemplate":false,"author":"Mochi","outline":[2,4],"categories":["post"],"tags":["javascript"]},"headers":[{"level":2,"title":"区分大小写","slug":"区分大小写","link":"#区分大小写","children":[]},{"level":2,"title":"标识符","slug":"标识符","link":"#标识符","children":[]},{"level":2,"title":"语句","slug":"语句","link":"#语句","children":[{"level":3,"title":"表达式","slug":"表达式","link":"#表达式","children":[]},{"level":3,"title":"语句的结果值","slug":"语句的结果值","link":"#语句的结果值","children":[]},{"level":3,"title":"自动分号","slug":"自动分号","link":"#自动分号","children":[]},{"level":3,"title":"if 语句","slug":"if-语句","link":"#if-语句","children":[]},{"level":3,"title":"switch 语句","slug":"switch-语句","link":"#switch-语句","children":[]},{"level":3,"title":"标签语句","slug":"标签语句","link":"#标签语句","children":[]},{"level":3,"title":"break 语句","slug":"break-语句","link":"#break-语句","children":[]},{"level":3,"title":"continue 语句","slug":"continue-语句","link":"#continue-语句","children":[]},{"level":3,"title":"try...catch 语句","slug":"try-catch-语句","link":"#try-catch-语句","children":[]},{"level":3,"title":"throw 语句","slug":"throw-语句","link":"#throw-语句","children":[]}]},{"level":2,"title":"严格模式","slug":"严格模式","link":"#严格模式","children":[]}],"relativePath":"_POSTS/javascript/003_basic-grammar.md","lastUpdated":1675231076000}'),r={name:"_POSTS/javascript/003_basic-grammar.md"},y=s("h1",{id:"javascript-基础语法",tabindex:"-1"},[a("JavaScript 基础语法 "),s("a",{class:"header-anchor",href:"#javascript-基础语法","aria-hidden":"true"},"#")],-1),D=s("p",null,"ECMAScript 语法在很大程度上借鉴了 C 语言和其它类 C 语言, 如 Java 与 Perl。熟悉这些语言的开发者, 应该很容易理解 ECMAScript 宽松的语法。",-1),F=s("h2",{id:"区分大小写",tabindex:"-1"},[a("区分大小写 "),s("a",{class:"header-anchor",href:"#区分大小写","aria-hidden":"true"},"#")],-1),C=s("h2",{id:"标识符",tabindex:"-1"},[a("标识符 "),s("a",{class:"header-anchor",href:"#标识符","aria-hidden":"true"},"#")],-1),A=s("p",null,"所谓标识符, 就是变量、函数、属性或函数参数地名称。标识符可以由一或多个下列字符组成：",-1),d=s("ul",null,[s("li",null,"第一个字符必须是一个字母、下划线(_)或美元符号($)"),s("li",null,"剩下的其它字符可以是字母、下划线、美元符号或数字")],-1),h=s("p",null,"标识符中的字母可以是扩展 ASCII（Extended ASCII）中的字母, 也可以是 Unicode 的字母字符, 如 À 和 Æ （但不推荐使用）。",-1),u=o("",5),_=o("",3),f=o("",11),g=o("",3),b={class:"tip custom-block"},v=s("p",{class:"custom-block-title"},"TIP",-1),k=s("li",null,"加不加分号取决于代码习惯, 遵循仓库风格即可",-1),m=s("li",null,'不加分号时, 括号"(", 方括号"[", 正则开头的斜杠"/" , 加号"+", 减号"-" 作为行首可能会导致上下行解析出现问题',-1),E=s("li",null,"建议在有需要的地方加上分号, 将对 ASI 的依赖降到最低",-1),S=o("",8),T=o("",5),j=o("",2),w={class:"tip custom-block"},I=s("p",{class:"custom-block-title"},"TIP",-1),x=s("li",null,"switch 语句在适当情况下可替换掉 if...else if...else 语句",-1),P=s("li",null,"switch 语句在比较每个条件的值时会使用全等操作符 （===）",-1),V=s("li",null,"default 可以放在 case 之上, JavaScript 会在找不到匹配项时跳回至 default, 但推荐将其放在最下面",-1),N=o("",33);function J(B,M,R,$,q,O){const l=c("f");return i(),t("div",null,[y,D,F,n(l,null,{default:p(()=>[a("ECMAScript 中一切都区分大小写。")]),_:1}),a("无论是变量、函数名还是操作符, 都区分大小写。换句话说, 变量 test 和变量 Test 是两个完全不同的变量。类似地, typeof 不能作为变量或函数名, 因为它是一个关键字, 但 Typeof 却是一个完全有效地变量或函数名。"),C,A,d,h,s("p",null,[a("按照惯例, "),n(l,null,{default:p(()=>[a("ECMAScript 标识符推荐使用驼峰大小写形式")]),_:1}),a(", 即第一个单词的首字母小写, 后面每个单词的首字母大写, 如 myCar、firstSecond。虽然这种写法并不是强制性的, 但因为这种形式跟 ECMAScript 内置函数和对象命名方式一致, 所以算是最佳实践。")]),u,n(l,null,{default:p(()=>[a("表达式不能独立表达出意思。从表现形式上来讲, 一般是获取一个值, 可直接赋给变量")]),_:1}),a("。例如："),_,s("p",null,[a("很多人不知道, "),n(l,null,{default:p(()=>[a("语句也有结果值")]),_:1}),a("（undefined 也算）。")]),f,n(l,null,{default:p(()=>[a("ASI 只在换行符处起作用, 而不会在代码行的中间插入分号")]),_:1}),a("。如果 JavaScript 编译器发现代码行可能因为缺失分号而导致错误, 那么它就会自动补上分号。并且, 只有在代码行末尾与换行符之间除了空格和注释之外没有别的内容时, 它才会这么做。"),g,s("div",b,[v,s("ol",null,[k,m,s("li",null,[n(l,null,{default:p(()=>[a('最佳实践：一行以 "(", "[", "+", "-", "/" 开头时, 在其前加上分号')]),_:1})]),E])]),S,s("p",null,[a("实际上,"),n(l,null,{default:p(()=>[a('JavaScript 没有 else if, else 其后的 if 只是包含单条语句时省略了 "{}"')]),_:1}),a("。")]),T,n(l,null,{default:p(()=>[a("key 与 value 的匹配算法与 === 相同")]),_:1}),a("。有时可能会需要通过强制类型转换来进行相等比较, 这时就需要做一些特殊处理:"),j,s("div",w,[I,s("ol",null,[s("li",null,[n(l,null,{default:p(()=>[a("当 case 没有 break 时, 会执行下面的 case 代码, 且不用再次判断")]),_:1})]),x,P,s("li",null,[n(l,null,{default:p(()=>[a("为避免不必要的条件判断, 最好给每个条件后面都加上 break 语句")]),_:1}),a("。如果确实需要连续匹配几个条件时, 推荐写个注释表明是故意忽略了 break")]),V])]),N])}const z=e(r,[["render",J]]);export{G as __pageData,z as default};
