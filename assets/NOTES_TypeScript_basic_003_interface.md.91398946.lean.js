import{_ as a,c as s,o as i,b as e,d as t}from"./app.9d7c8735.js";const x=JSON.parse('{"title":"TypeScript","titleTemplate":"接口","description":"","frontmatter":{"title":"TypeScript","titleTemplate":"接口"},"headers":[{"level":2,"title":"接口 VS 类型别名","slug":"接口-vs-类型别名","link":"#接口-vs-类型别名","children":[]}],"relativePath":"_NOTES/TypeScript/basic/003_interface.md","lastUpdated":1679023107000}'),r={name:"_NOTES/TypeScript/basic/003_interface.md"},c=e("h1",{id:"接口",tabindex:"-1"},[t("接口 "),e("a",{class:"header-anchor",href:"#接口","aria-hidden":"true"},"#")],-1),n=e("p",null,"正在拼命归档整理中...",-1),o=e("p",null,"接口能够描述 JavaScript 中对象拥有的各种各样的外形。 除了描述带有属性的普通对象外，接口也可以描述函数类型。",-1),d=e("h2",{id:"接口-vs-类型别名",tabindex:"-1"},[t("接口 VS 类型别名 "),e("a",{class:"header-anchor",href:"#接口-vs-类型别名","aria-hidden":"true"},"#")],-1),_=e("p",null,"接口可以被继承, 能使用接口就使用接口, 类型别名一般是用于联合类型、交叉类型与条件类型",-1),l=[c,n,o,d,_];function p(h,f,u,m,S,T){return i(),s("div",null,l)}const b=a(r,[["render",p]]);export{x as __pageData,b as default};
