import{_ as e,c as t,o as l,a as i}from"./app.d1653cf8.js";const o="/mochi-blog/assets/001_HTMLCollection-NodeList.04976403.png",m=JSON.parse('{"title":"DOM 和 BOM","description":"","frontmatter":{},"headers":[{"level":2,"title":"HTMLCollection 和 NodeList 区别?","slug":"htmlcollection-和-nodelist-区别","link":"#htmlcollection-和-nodelist-区别","children":[]},{"level":2,"title":"offsetHeight、scrollHeight、clientHeight 区别?","slug":"offsetheight、scrollheight、clientheight-区别","link":"#offsetheight、scrollheight、clientheight-区别","children":[]}],"relativePath":"_NOTES/Soul Torture/JavaScript/002_DOM BOM.md","lastUpdated":1676598576000}'),c={name:"_NOTES/Soul Torture/JavaScript/002_DOM BOM.md"},n=i('<h1 id="dom-和-bom" tabindex="-1">DOM 和 BOM <a class="header-anchor" href="#dom-和-bom" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#htmlcollection-和-nodelist-区别">HTMLCollection 和 NodeList 区别?</a></li><li><a href="#offsetheight、scrollheight、clientheight-区别">offsetHeight、scrollHeight、clientHeight 区别?</a></li></ul></nav><h2 id="htmlcollection-和-nodelist-区别" tabindex="-1">HTMLCollection 和 NodeList 区别? <a class="header-anchor" href="#htmlcollection-和-nodelist-区别" aria-hidden="true">#</a></h2><p><img src="'+o+'" alt="HTMLCollection 和 NodeList"></p><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>HTMLCollection 是 Element 的集合</li><li>NodeList 是 Node 集合</li></ul><p>获取 Node 和 Element 的返回结果可能不一样, 如 elem.childNodes(NodeList) 的 elem.children(HTMLCollection) 不一样, 前者会包含 Text 和 Comment 节点, 后者不会。</p></div><h2 id="offsetheight、scrollheight、clientheight-区别" tabindex="-1">offsetHeight、scrollHeight、clientHeight 区别? <a class="header-anchor" href="#offsetheight、scrollheight、clientheight-区别" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">前情提要</p><ul><li>offset (会四舍五入) <ul><li>offsetWidth / offsetHeight : border + padding + content</li><li>offsetLeft / offsetTop : 左上角相对 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetParent" target="_blank" rel="noreferrer">offsetParent</a> 父节点的左/上边界偏移的像素值</li></ul></li><li>client (会四舍五入) <ul><li>clientWidth / clientHeight : padding + content</li><li>clientLeft / clientTop : 左 / 上边框的宽度</li></ul></li><li>scroll (scrollWidth / scrollHeight 会四舍五入) <ul><li>scrollWidth / scrollHeight : 实际内容尺寸 &gt; content ? padding + 实际内容尺寸 : (clientWidth clientHeight)</li><li>scrollLeft / scrollTop : 卷起来的顶端到视口左/上侧的距离 (可以是小数)</li></ul></li></ul><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noreferrer">Element.getBoundingClientRect()</a> API 可以获取 offsetWidth 的小数形式以及元素相对于视窗的位置。</p></div><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>offsetWidth offsetHeight : border + padding + content</li><li>clientWidth clientHeight : padding + content</li><li>scrollWidth scrollHeight : 实际内容尺寸 &gt; content ? padding + 实际内容尺寸 : (clientWidth clientHeight)</li></ul></div>',8),s=[n];function h(r,a,d,f,g,p){return l(),t("div",null,s)}const u=e(c,[["render",h]]);export{m as __pageData,u as default};
