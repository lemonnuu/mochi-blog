import{_ as e,c as t,o as a,a as l}from"./app.72227855.js";const v=JSON.parse('{"title":"进阶篇","description":"","frontmatter":{},"headers":[{"level":2,"title":"event loop (事件循环/事件轮询)的机制是怎样的?","slug":"event-loop-事件循环-事件轮询-的机制是怎样的","link":"#event-loop-事件循环-事件轮询-的机制是怎样的","children":[]},{"level":2,"title":"什么是宏任务和微任务, 两者有什么区别?","slug":"什么是宏任务和微任务-两者有什么区别","link":"#什么是宏任务和微任务-两者有什么区别","children":[]}],"relativePath":"_NOTES/Soul Torture/JavaScript/003_advanced.md","lastUpdated":1675394738000}'),i={name:"_NOTES/Soul Torture/JavaScript/003_advanced.md"},o=l('<h1 id="进阶篇" tabindex="-1">进阶篇 <a class="header-anchor" href="#进阶篇" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#event-loop-事件循环-事件轮询-的机制是怎样的">event loop (事件循环/事件轮询)的机制是怎样的?</a></li><li><a href="#什么是宏任务和微任务-两者有什么区别">什么是宏任务和微任务, 两者有什么区别?</a></li></ul></nav><h2 id="event-loop-事件循环-事件轮询-的机制是怎样的" tabindex="-1">event loop (事件循环/事件轮询)的机制是怎样的? <a class="header-anchor" href="#event-loop-事件循环-事件轮询-的机制是怎样的" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">答案</p><ol><li>清空函数调用堆栈 <ul><li>遇到微任务回调推入微任务队列</li><li>遇到宏任务回调挂起, 等待时机, 时机成熟推入宏任务队列</li></ul></li><li>清空微任务队列</li><li>渲染 DOM</li><li>不停轮询宏任务队列, 直至宏任务队列含有队头, 单个将队头推入函数调用堆栈</li><li>回到第一步, 不断重复整个流程</li></ol></div><h2 id="什么是宏任务和微任务-两者有什么区别" tabindex="-1">什么是宏任务和微任务, 两者有什么区别? <a class="header-anchor" href="#什么是宏任务和微任务-两者有什么区别" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">答案</p><p>宏任务包括 setTimeout、setInterval、Ajax、requestAnimationFrame、DOM 事件等。</p><p>微任务包括 Promise.then、Promise.catch、Promise.finally、MutationObserver、queueMicrotask、process.nextTick(Node 独有)。</p><p>宏任务是由浏览器规定的, 而微任务是 ES6 语法制定的。宏任务在 DOM 渲染后执行, 微任务在 DOM 渲染前执行。</p></div>',6),s=[o];function r(n,c,d,p,_,h){return a(),t("div",null,s)}const m=e(i,[["render",r]]);export{v as __pageData,m as default};
