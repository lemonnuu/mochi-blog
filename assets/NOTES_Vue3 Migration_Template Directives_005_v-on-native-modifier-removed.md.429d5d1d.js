import{_ as e,c as s,o as a,a as n}from"./app.2a9d4724.js";const v=JSON.parse('{"title":"移除 v-on.native 修饰符","description":"","frontmatter":{"outline":[1,2]},"headers":[{"level":2,"title":"概览","slug":"概览","link":"#概览","children":[]},{"level":2,"title":"2.x 语法","slug":"_2-x-语法","link":"#_2-x-语法","children":[]},{"level":2,"title":"3.x 语法","slug":"_3-x-语法","link":"#_3-x-语法","children":[]},{"level":2,"title":"迁移策略","slug":"迁移策略","link":"#迁移策略","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"_NOTES/Vue3 Migration/Template Directives/005_v-on-native-modifier-removed.md","lastUpdated":1676948334000}'),l={name:"_NOTES/Vue3 Migration/Template Directives/005_v-on-native-modifier-removed.md"},o=n(`<h1 id="移除-v-on-native-修饰符" tabindex="-1">移除 <code>v-on.native</code> 修饰符 <a class="header-anchor" href="#移除-v-on-native-修饰符" aria-hidden="true">#</a></h1><h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-hidden="true">#</a></h2><ul><li><code>v-on</code> 的 <code>.native</code> 修饰符已被移除</li></ul><h2 id="_2-x-语法" tabindex="-1">2.x 语法 <a class="header-anchor" href="#_2-x-语法" aria-hidden="true">#</a></h2><p>默认情况下, 传递给带有 <code>v-on</code> 的组件的事件监听器只能通过 <code>this.$emit</code> 触发。要将原生 DOM 监听器添加到子组件的根元素中, 可以使用 <code>.native</code> 修饰符:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">close</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">handleComponentEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">click</span><span style="color:#A6ACCD;">.</span><span style="color:#C792EA;">native</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">handleNativeClickEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-x-语法" tabindex="-1">3.x 语法 <a class="header-anchor" href="#_3-x-语法" aria-hidden="true">#</a></h2><p><code>v-on</code> 的 <code>.native</code> 修饰符已被移除。同时, 新增的 <code>emits</code> 选项允许子组件定义真正会被触发的事件。</p><p>因此, 对于子组件中未被定义为组件触发的所有事件监听器, Vue 现在将把它们作为原生事件监听器添加到子组件的根元素中 (除非在子组件的选项中设置了 <code>inheritAttrs: false</code>)。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-WV_71" id="tab-ZbAMr1k" checked="checked"><label for="tab-ZbAMr1k">ParentComponent</label><input type="radio" name="group-WV_71" id="tab-kyZo1qx"><label for="tab-kyZo1qx">MyComponent</label></div><div class="blocks"><div class="language-vue active"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">MyComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">close</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">handleComponentEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">handleNativeClickEvent</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">emits</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">close</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="迁移策略" tabindex="-1">迁移策略 <a class="header-anchor" href="#迁移策略" aria-hidden="true">#</a></h2><ul><li>删除 <code>.native</code> 修饰符的所有实例</li><li>确保所有组件都使用 <code>emits</code> 选项记录其事件</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0031-attr-fallthrough.md#v-on-listener-fallthrough" target="_blank" rel="noreferrer">相关的 RFC</a></li><li><a href="https://v3-migration.vuejs.org/zh/breaking-changes/emits-option.html" target="_blank" rel="noreferrer">迁移指南 - 新增 Emits 选项</a></li><li><a href="https://v3-migration.vuejs.org/zh/breaking-changes/listeners-removed.html" target="_blank" rel="noreferrer">迁移指南 - 移除 $listeners</a></li><li><a href="https://v3-migration.vuejs.org/zh/breaking-changes/render-function-api.html" target="_blank" rel="noreferrer">迁移指南 - 渲染函数 API 的更改</a></li></ul>`,14),t=[o];function p(r,c,i,d,D,h){return a(),s("div",null,t)}const F=e(l,[["render",p]]);export{v as __pageData,F as default};
