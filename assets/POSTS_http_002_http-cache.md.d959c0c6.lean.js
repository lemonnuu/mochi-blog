import{_ as o,c as d,b as a,d as e,e as t,w as l,a as i,r as c,o as p}from"./app.eb5321dd.js";const h="/mochi-blog/assets/002_http-cache.31db286a.svg",R=JSON.parse('{"title":"HTTP 缓存","titleTemplate":false,"description":"","frontmatter":{"date":"2023-02-05 10:38:20","title":"HTTP 缓存","titleTemplate":false,"author":"Mochi","outline":[2,4],"categories":["post"],"tags":["http"]},"headers":[{"level":2,"title":"缓存相关的首部字段","slug":"缓存相关的首部字段","link":"#缓存相关的首部字段","children":[{"level":3,"title":"Expires","slug":"expires","link":"#expires","children":[]},{"level":3,"title":"Cache-Control","slug":"cache-control","link":"#cache-control","children":[]}]},{"level":2,"title":"资源标识相关的首部字段","slug":"资源标识相关的首部字段","link":"#资源标识相关的首部字段","children":[{"level":3,"title":"Last-Modified 与 If-Modified-Since","slug":"last-modified-与-if-modified-since","link":"#last-modified-与-if-modified-since","children":[]},{"level":3,"title":"Etag 与 If-None-Match","slug":"etag-与-if-none-match","link":"#etag-与-if-none-match","children":[]}]},{"level":2,"title":"强缓存与协商缓存","slug":"强缓存与协商缓存","link":"#强缓存与协商缓存","children":[{"level":3,"title":"强缓存","slug":"强缓存","link":"#强缓存","children":[]},{"level":3,"title":"协商缓存","slug":"协商缓存","link":"#协商缓存","children":[]}]},{"level":2,"title":"不同刷新操作, 不同缓存策略","slug":"不同刷新操作-不同缓存策略","link":"#不同刷新操作-不同缓存策略","children":[]},{"level":2,"title":"缓存改进方案","slug":"缓存改进方案","link":"#缓存改进方案","children":[{"level":3,"title":"md5/hash 缓存","slug":"md5-hash-缓存","link":"#md5-hash-缓存","children":[]},{"level":3,"title":"CDN 缓存","slug":"cdn-缓存","link":"#cdn-缓存","children":[]}]}],"relativePath":"_POSTS/http/002_http-cache.md","lastUpdated":1675603026000}'),r={name:"_POSTS/http/002_http-cache.md"},_=a("h1",{id:"http-缓存",tabindex:"-1"},[e("HTTP 缓存 "),a("a",{class:"header-anchor",href:"#http-缓存","aria-hidden":"true"},"#")],-1),u=a("strong",null,"浏览器端",-1),g=i("",4),C=a("h3",{id:"cache-control",tabindex:"-1"},[e("Cache-Control "),a("a",{class:"header-anchor",href:"#cache-control","aria-hidden":"true"},"#")],-1),f=a("p",null,"Cache-Control 是通用首部字段, 它是 HTTP/1.1 时代的产物。",-1),T=a("blockquote",null,[a("p",null,"当请求头设置了此字段时, 以请求头的为准, 但是请求头一般不包含此字段。")],-1),m=a("p",null,"它的常用指令如下:",-1),x=a("li",null,"no-store : 不缓存任何内容",-1),b=a("li",null,"public : 任意方都可缓存, 如代理",-1),A=i("",5),v=i("",5),k=i("",5),S=a("strong",null,"以下默认此条件",-1),y=i("",12),P=i("",5);function D(I,M,E,N,V,H){const s=c("f"),n=c("Badge");return p(),d("div",null,[_,a("p",null,[e("HTTP 缓存一般指的是为了性能优化在"),u,e("缓存一些静态文件, 例如 css、js、image 等。"),t(s,null,{default:l(()=>[e("HTML 文件一般不作缓存。")]),_:1})]),g,t(s,null,{default:l(()=>[e('由于 Expires 采取的是"绝对时间", 而服务器与浏览器的时间很有可能不一致, 所以它的判断并不是很准确。')]),_:1}),C,f,T,m,a("ul",null,[a("li",null,[e("max-age"),t(n,{type:"tip",text:"必需参数"}),e(" : 响应的有效时长")]),a("li",null,[e("no-cache"),t(n,{type:"tip",text:"默认参数"}),e(" : 获取资源前向服务器验证缓存是否可用")]),x,b,a("li",null,[e("private"),t(n,{type:"tip",text:"默认参数"}),e(" : 只允许用户做缓存, 不允许代理做缓存")])]),t(s,null,{default:l(()=>[e("max-age 可以说是 Expires 的替代产物, 它采取的是有效时长(时间的偏移量)。")]),_:1}),A,a("p",null,[e("Last-Modified 响应头表示资源最后修改时间, 但"),t(s,null,{default:l(()=>[e("只能精确到秒级")]),_:1}),e(", 所以并不能保证百分百准确。")]),v,t(s,null,{default:l(()=>[e("Etag 响应头有点像资源内容的哈希, 它是一个字符串, 只有资源内容发生改变时才会发生变化。")]),_:1}),k,t(s,null,{default:l(()=>[e("首先, 不管是强缓存还是协商缓存 Cache-Control 的值都不包含 no-store。")]),_:1}),S,e("。"),y,t(s,null,{default:l(()=>[e("浏览器是无法跳过缓存过期时间主动感知文件变化的。")]),_:1}),e("换句话说, 在缓存没有过期时, 哪怕服务器的资源发生了变化, 浏览器仍会使用缓存文件。"),P])}const B=o(r,[["render",D]]);export{R as __pageData,B as default};
