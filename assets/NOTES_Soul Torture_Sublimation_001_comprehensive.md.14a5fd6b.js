import{_ as l,c as i,o as e,a as t}from"./app.28a094d9.js";const S=JSON.parse('{"title":"综合强化","description":"","frontmatter":{},"headers":[{"level":2,"title":"从输入 URL 到渲染出页面的整个过程?","slug":"从输入-url-到渲染出页面的整个过程","link":"#从输入-url-到渲染出页面的整个过程","children":[]},{"level":2,"title":"性能优化方案?","slug":"性能优化方案","link":"#性能优化方案","children":[]}],"relativePath":"_NOTES/Soul Torture/Sublimation/001_comprehensive.md","lastUpdated":1675673479000}'),a={name:"_NOTES/Soul Torture/Sublimation/001_comprehensive.md"},r=t('<h1 id="综合强化" tabindex="-1">综合强化 <a class="header-anchor" href="#综合强化" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#从输入-url-到渲染出页面的整个过程">从输入 URL 到渲染出页面的整个过程?</a></li><li><a href="#性能优化方案">性能优化方案?</a></li></ul></nav><h2 id="从输入-url-到渲染出页面的整个过程" tabindex="-1">从输入 URL 到渲染出页面的整个过程? <a class="header-anchor" href="#从输入-url-到渲染出页面的整个过程" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">答案</p><p>加载资源:</p><ol><li>浏览器判断 URL 是否符合规范, 再进行 URL 编码</li><li>DNS 解析 : 域名 -&gt; IP 地址</li><li>浏览器根据 IP 地址向服务器发起 HTTP 请求</li><li>服务器处理 HTTP 请求, 并返回给浏览器</li></ol><p>渲染过程:</p><ol><li>根据 HTML 代码生成 DOM Tree</li><li>根据 CSS 代码生成 CSSOM (具体看 CSS 书写位置, 建议放上面先渲染 CSSOM)</li><li>将 DOM Tree 和 CSSOM 整合形成 Render Tree</li><li>根据 Render Tree 渲染页面</li><li>遇到 &lt;script&gt; 则暂停渲染, 优先加载并执行 JS 代码, 完成再继续</li><li>直至把 Render Tree 渲染完成</li></ol></div><h2 id="性能优化方案" tabindex="-1">性能优化方案? <a class="header-anchor" href="#性能优化方案" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">前情提要</p><p>性能优化原则: (适用于所有编程的性能优化 —— 空间换时间)</p><ul><li>多使用内存、缓存或其它方法</li><li>减少 CPU 计算量, 减少网络加载耗时</li></ul></div><div class="tip custom-block"><p class="custom-block-title">答案</p><ul><li>让加载更快 <ul><li>减少资源体积: 压缩代码、Tree Shaking</li><li>升级 HTTP/2.0, 合并代码并进行合理的 Code Spliting</li><li>一些小图片可以 base64 直接嵌入, 减少请求</li><li>使用 CDN 加速</li></ul></li><li>让渲染更快 <ul><li>CSS 放在 head 里, JS 放 body 最下面(先执行 CSS, 最后执行 JS)</li><li>对静态资源进行缓存</li><li>图片懒加载, 上滑加载更多</li><li>对 DOM 查询进行缓存</li><li>需要频繁操作 DOM 时, 合并到一起插入 DOM 结构</li><li>节流 throttle 防抖 debounce</li></ul></li></ul></div>',7),o=[r];function s(c,n,d,u,h,_){return e(),i("div",null,o)}const T=l(a,[["render",s]]);export{S as __pageData,T as default};
